
import java.util.*;
import java.util.concurrent.*;

class Question {
    private String questionText;
    private List<String> options;
    private int correctAnswerIndex;

    public Question(String questionText, List<String> options, int correctAnswerIndex) {
        this.questionText = questionText;
        this.options = options;
        this.correctAnswerIndex = correctAnswerIndex;
    }

    public String getQuestionText() {
        return questionText;
    }

    public List<String> getOptions() {
        return options;
    }

    public boolean isCorrectAnswer(int answerIndex) {
        return answerIndex == correctAnswerIndex;
    }
}

class Quiz {
    private List<Question> questions;
    private int score;
    private int currentQuestionIndex;
    private Map<Integer, Boolean> userAnswers;
    private final int TIME_LIMIT = 25; // Time limit in seconds

    public Quiz(List<Question> questions) {
        this.questions = questions;
        this.score = 0;
        this.currentQuestionIndex = 0;
        this.userAnswers = new HashMap<>();
    }

    public void start() {
        Scanner scanner = new Scanner(System.in);
        ExecutorService executor = Executors.newSingleThreadExecutor();
        while (currentQuestionIndex < questions.size()) {
            Question question = questions.get(currentQuestionIndex);
            System.out.println("Question " + (currentQuestionIndex + 1) + ": " + question.getQuestionText());
            List<String> options = question.getOptions();
            for (int i = 0; i < options.size(); i++) {
                System.out.println((i + 1) + ". " + options.get(i));
            }
            System.out.println("You have " + TIME_LIMIT + " seconds to answer.");

            Future<Integer> future = executor.submit(() -> {
                Scanner inputScanner = new Scanner(System.in);
                int answer = -1;
                try {
                    answer = inputScanner.nextInt();
                } catch (InputMismatchException e) {
                    System.out.println("Invalid input. Please enter a number.");
                }
                return answer;
            });

            try {
                Integer answer = future.get(TIME_LIMIT, TimeUnit.SECONDS);
                if (answer != null && answer > 0 && answer <= options.size()) {
                    userAnswers.put(currentQuestionIndex, question.isCorrectAnswer(answer - 1));
                } else {
                    System.out.println("Time's up or invalid option. No points for this question.");
                    userAnswers.put(currentQuestionIndex, false);
                }
            } catch (TimeoutException e) {
                System.out.println("Time's up! No points for this question.");
                userAnswers.put(currentQuestionIndex, false);
            } catch (InterruptedException | ExecutionException e) {
                System.out.println("An error occurred.");
            }

            currentQuestionIndex++;
        }
        executor.shutdown();
        displayResults();
    }

    private void displayResults() {
        System.out.println("\nQuiz Over! Here are your results:");
        for (int i = 0; i < questions.size(); i++) {
            Question question = questions.get(i);
            boolean isCorrect = userAnswers.get(i);
            if (isCorrect) {
                score++;
                System.out.println("Question " + (i + 1) + ": Correct");
            } else {
                System.out.println("Question " + (i + 1) + ": Incorrect");
            }
        }
        System.out.println("Your final score is: " + score + "/" + questions.size());
    }
}

public class Main {
    public static void main(String[] args) {
        List<Question> questions = new ArrayList<>();
        questions.add(new Question(
            "What is the capital of France?",
            Arrays.asList("Paris", "London", "Berlin", "Madrid"),
            0
        ));
        questions.add(new Question(
            "Which planet is known as the Red Planet?",
            Arrays.asList("Earth", "Mars", "Jupiter", "Saturn"),
            1
        ));
        questions.add(new Question(
            "What is the chemical symbol for water?",
            Arrays.asList("O2", "H2O", "CO2", "NaCl"),
            1
        ));
        questions.add(new Question(
            " What is the capital of Japan?",
            Arrays.asList("Beijing","Tokyo","Seoul","Bangkok"),
            1
            ));
        Quiz quiz = new Quiz(questions);
        quiz.start();
    }
}
